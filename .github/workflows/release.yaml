name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  # If the SemVer tag contains a hyphen (e.g., v1.0.0-beta.1) or
  # starts with "v0." (e.g., v0.5.0), consider it a pre-release.
  IS_PRERELEASE: ${{ contains(github.ref_name, '-') || startsWith(github.ref_name, 'v0.') }}

jobs:
  pre-check:
    name: Pre-Check
    uses: ./.github/workflows/check.yaml

  publish-package-to-jsr:
    name: Publish package to JSR
    needs: pre-check

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    permissions:
      id-token: write # Required for OIDC.

    steps:
      - name: Check out repository
        uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false

      - name: Publish package to JSR
        run: npx jsr publish

  publish-package-to-npm:
    name: Publish package to npm
    needs: pre-check

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    permissions:
      id-token: write # Required for OIDC.

    steps:
      - name: Check out repository
        uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false

      - name: Set up pnpm
        uses: pnpm/action-setup@v4.2.0

      - name: Set up Node.js
        uses: actions/setup-node@v6.0.0
        with:
          node-version-file: package.json
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Replace GitHub-flavored Markdown alerts with standard Markdown
        run: sed -i 's/^> *\[\!\([a-zA-Z]\)\([a-zA-Z]*\)\] */> **\U\1\L\2**  /g' ./*.md
        # Basically replaces:
        # > [!NOTE]
        # with:
        # > **Note**

      - name: Publish package to npm
        env:
          TAG: ${{ env.IS_PRERELEASE && 'next' || 'latest' }}
        run: pnpm publish --access=public --no-git-checks --tag="${TAG}"

  create-github-release:
    name: Create GitHub release
    needs: pre-check

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    permissions:
      contents: write # Required for creating releases.

    steps:
      - name: Check out repository
        uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false

      - name: Set up pnpm
        uses: pnpm/action-setup@v4.2.0

      - name: Set up Node.js
        uses: actions/setup-node@v6.0.0
        with:
          node-version-file: package.json
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Create package tarball
        run: pnpm pack

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2.4.1
        with:
          draft: true
          prerelease: ${{ env.IS_PRERELEASE }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            astro-html-minifier-next-*.tgz
